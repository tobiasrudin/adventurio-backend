---
openapi: 3.0.2
info:
  version: "0.9"
  title: adventurio
  description: "Get or post info about Adventürio games."
  contact:
    name: "Tobias Rudin"
    email: "t.rudin@gmail.com"
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
paths:
  /games/{gameId}:
    put:
      summary: Create a game
      operationId: createGame
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to put
          schema:
            type: string
            minLength: 36
            maxLength: 36
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
      responses:
        "201":
          description: Resource created
        "204":
          description: Resource updated
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:454263499388:function:${stageVariables.PutGameFunction}/invocations"
    get:
      summary: Information about an Adventürio game
      operationId: showGameById
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to get
          schema:
            type: string
            minLength: 36
            maxLength: 36
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-request-validator: "params-only"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:454263499388:function:${stageVariables.GetGameFunction}/invocations"
components:
  schemas:
    Game:
      required:
        - name
        - paths
        - startPos
      properties:
        name:
          type: string
          maxLength: 30
        paths:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Path"
        startPos:
          required:
            - long
            - lat
          properties:
            long:
              type: number
              minimum: -180
              maximum: 180
            lat:
              type: number
              minimum: -90
              maximum: 90
    Path:
      type: array
      minItems: 1
      items:
        $ref: "#/components/schemas/Point"
    Point:
      required:
        - long
        - lat
        - question
        - timeUntilAnswer
        - answer
      properties:
        long:
          type: number
          minimum: -180
          maximum: 180
        lat:
          type: number
          minimum: -90
          maximum: 90
        question:
          type: string
          maxLength: 60
        timeUntilAnswer:
          type: integer
          format: int32
          minimum: 60
          maximum: 600
        hints:
          type: array
          items:
            $ref: "#/components/schemas/Hint"
        answer:
          type: string
          maxLength: 20
    Hint:
      required:
        - timeUntilShown
        - text
      properties:
        timeUntilShown:
          type: integer
          format: int32
          minimum: 60
          maximum: 300
        text:
          type: string
          maxLength: 60
    Error:
      required:
        - message
      properties:
        message:
          type: string